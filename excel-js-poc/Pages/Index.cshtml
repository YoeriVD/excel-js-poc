@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about parsing excels in the browser!</p>
</div>

<form>
    <div>
        <label class="form-label" for="file">excel file:</label>
        <input id="file" class="form-control" type="file">
    </div>
</form>
<div id="grid">

</div>


@section Scripts
{
    <script src="~/lib/exceljs/exceljs.min.js"></script>
    <script>
    const grid = $("#grid");
    const map = {
        1 : 'A',
        2: 'B',
        3: 'C',
        4: 'D',
        5: 'E',
        6: 'F',
        7: 'G',
        8 :'H',
        9 :'I',
        10 :'J',
        11 :'K',
        12 :'L',
        13: 'M',
        14 :'N',
        15 :'O',
        16 :'P',
        17 :'Q',
        18 :'R',
        19 :'S',
        20 :'T',
        21 :'U',
        22 :'V',
        23 :'W',
        24 :'X',
        25 :'Y',
        26 :'Z',
        }
    $("#file").on('change', async (e)=>{
        const file = e.target.files[0];
            
        const wb = new ExcelJS.Workbook();
        await wb.xlsx.load(file);
        wb.eachSheet((sheet, sheetId) => {
            const info = { c: sheet.columnCount, r: sheet.rowCount };
            for (let r = 1; r <= info.r; r++){
                const row = document.createElement('div');
                row.classList.add('row');
                grid.append(row);
                for (let c = 1; c <= info.c; c++){
                    const cell = document.createElement('div')
                    cell.classList.add('col');
                    cell.innerHTML = sheet.getCell(`${map[c]}${r}`).value;
                    row.append(cell);
                }     
            }
        });
        
    });
      
    
    </script>
}